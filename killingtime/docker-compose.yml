services:
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    depends_on: ["gluetun"]
    network_mode: service:gluetun
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
      - UMASK_SET=022
    volumes:
      - /home/luckierdodge/killingtime-storage/config/sonarr/config:/config
      - /home/luckierdodge/havoc-data/media:/media
    restart: unless-stopped
    labels:
      - docker-volume-backup.stop-during-backup=true
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    depends_on: ["gluetun"]
    network_mode: service:gluetun
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
      - UMASK_SET=022
    volumes:
      - /home/luckierdodge/killingtime-storage/config/radarr/config:/config
      - /home/luckierdodge/havoc-data/media:/media
    restart: unless-stopped
    labels:
      - docker-volume-backup.stop-during-backup=true
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    depends_on: ["gluetun"]
    network_mode: service:gluetun
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
    volumes:
      - /home/luckierdodge/killingtime-storage/config/lidarr/config:/config
      - /home/luckierdodge/havoc-data/media:/media
    restart: unless-stopped
    labels:
      - docker-volume-backup.stop-during-backup=true
  nzbget:
    image: lscr.io/linuxserver/nzbget
    container_name: nzbget
    depends_on: ["gluetun"]
    network_mode: service:gluetun
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
    volumes:
      - /home/luckierdodge/killingtime-storage/config/nzbget/config:/config
      - /home/luckierdodge/havoc-data/media:/media #optional
    restart: unless-stopped
    labels:
      - docker-volume-backup.stop-during-backup=true
  autoheal:
    container_name: autoheal
    image: willfarrell/autoheal
    restart: unless-stopped
    network_mode: host
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
      - AUTOHEAL_INTERVAL=30
      - AUTOHEAL_START_PERIOD=60
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  ombi:
    image: ghcr.io/linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
    volumes:
      - /home/luckierdodge/killingtime-storage/config/ombi:/config
    depends_on: ["gluetun"]
    network_mode: service:gluetun
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    restart: unless-stopped
    labels:
      - docker-volume-backup.stop-during-backup=true
  plex:
    container_name: plex
    image: plexinc/pms-docker
    restart: unless-stopped
    ports:
      - 32400:32400
    environment:
      - TZ=America/Chicago
      - PLEX_CLAIM=<https://www.plex.tv/claim>
      - ADVERTISE_IP=https://plex.ryandlewis.dev/
      - PLEX_UID=1000
      - PLEX_GID=100
    hostname: killingtime
    volumes:
      - /home/luckierdodge/killingtime-storage/config/plex/config:/config
      - /home/luckierdodge/killingtime-storage/config/plex/transcode:/transcode
      - /home/luckierdodge/havoc-data/media:/data
      - /home/luckierdodge/media-storage:/media-storage
      - /home/luckierdodge/killingtime-storage/data/nextcloud/luckierdodge/files/Music:/music
      - /home/luckierdodge/killingtime-storage/data/nextcloud/luckierdodge/files/Pictures:/Pictures
    labels:
      - docker-volume-backup.stop-during-backup=true
  calibre:
    image: ghcr.io/linuxserver/calibre
    container_name: calibre
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
      - PASSWORD=Simple123
      - UMASK_SET=022
    volumes:
      - /home/luckierdodge/killingtime-storage/data/nextcloud/luckierdodge/files/Library:/Library
      - /home/luckierdodge/killingtime-storage/data/calibre:/config
      - /home/luckierdodge/media-storage/books:/books
    ports:
      - 8080:8080
      - 8081:8081
      - 9090:9090
      - 9091:9091
    restart: unless-stopped
    labels:
      - docker-volume-backup.stop-during-backup=true
  calibre-web:
    image: ghcr.io/linuxserver/calibre-web
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
      - DOCKER_MODS=linuxserver/calibre-web:calibre
    volumes:
      - /home/luckierdodge/killingtime-storage/data/calibre-web:/config
      - /home/luckierdodge/killingtime-storage/data/calibre:/books
    ports:
      - 8083:8083
    restart: unless-stopped
    labels:
      - docker-volume-backup.stop-during-backup=true
  heimdall:
    image: ghcr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
    volumes:
      - /home/luckierdodge/killingtime-storage/data/heimdall:/config
    ports:
      - 11180:80
      - 11443:443
    restart: unless-stopped
    links:
      - "paperless_webserver:paperless.local"
    labels:
      - docker-volume-backup.stop-during-backup=true
  nextcloud:
    image: ghcr.io/linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
    volumes:
      - /home/luckierdodge/killingtime-storage/config/nextcloud:/config
      - /home/luckierdodge/killingtime-storage/data/nextcloud:/data
    ports:
      - 21443:443
    restart: unless-stopped
    labels:
      - docker-volume-backup.stop-during-backup=true
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    env_file: vaultwarden.env
    volumes:
      - /home/luckierdodge/killingtime-storage/data/vaultwarden:/data
    ports:
      - 28080:80
      - 23012:3012
    restart: unless-stopped
    labels:
      - docker-volume-backup.stop-during-backup=true
  grocy:
    image: ghcr.io/linuxserver/grocy
    container_name: grocy
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
    volumes:
      - /home/luckierdodge/killingtime-storage/config/grocy:/config
    ports:
      - 9283:80
    restart: unless-stopped
    labels:
      - docker-volume-backup.stop-during-backup=true
      #freshrss:
      #  image: lscr.io/linuxserver/freshrss:latest
      #  container_name: freshrss
      #  environment:
      #    - PUID=1000
      #    - PGID=100
      #    - TZ=America/Chicago
      #  volumes:
      #    - /home/luckierdodge/killingtime-storage/config/freshrss:/config
      #  ports:
      #    - 9280:80
      #  restart: unless-stopped
      #bookstack:
      #  image: lscr.io/linuxserver/bookstack
      #  container_name: bookstack
      #  environment:
      #    - PUID=1000
      #    - PGID=100
      #    - APP_URL=https://wiki.ryandlewis.dev
      #    - DB_HOST=bookstack_db
      #    - DB_USER=bookstack
      #    - DB_DATABASE=bookstackapp
      #  env_file: secret.env
      #  volumes:
      #    - /home/luckierdodge/killingtime-storage/config/bookstack:/config
      #  ports:
      #    - 6875:80
      #  restart: unless-stopped
      #  depends_on:
      #    - bookstack_db
        #bookstack_db:
        #  image: lscr.io/linuxserver/mariadb
        #  container_name: bookstack_db
        #  environment:
        #    - PUID=1000
        #    - PGID=100
        #    - TZ=America/Chicago
        #    - MYSQL_DATABASE=bookstackapp
        #    - MYSQL_USER=bookstack
        #  env_file: secret.env
        #  volumes:
        #    - /home/luckierdodge/killingtime-storage/config/bookstack_db:/config
        #  restart: unless-stopped
  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    hostname: arksync #optional
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
    volumes:
      - /home/luckierdodge/killingtime-storage/config/syncthing:/config
      - /home/luckierdodge/killingtime-storage/data/syncthing/data:/data
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
    labels:
      - docker-volume-backup.stop-during-backup=true
  onlyoffice:
    image: onlyoffice/documentserver
    container_name: onlyoffice
    restart: unless-stopped
    env_file: onlyoffice.env
    volumes:
      - /home/luckierdodge/killingtime-storage/config/onlyoffice/logs:/var/log/onlyoffice
      - /home/luckierdodge/killingtime-storage/data/onlyoffice/certs:/var/www/onlyoffice/Data
      - /home/luckierdodge/killingtime-storage/data/onlyoffice/onlyoffice:/var/lib/onlyoffice
      - /home/luckierdodge/killingtime-storage/data/onlyoffice/postgresql:/var/lib/postgresql
    ports:
      - 8282:80
    labels:
      - docker-volume-backup.stop-during-backup=true
  foundryvtt:
    image: felddy/foundryvtt:11
    container_name: foundryvtt
    volumes:
      - /home/luckierdodge/killingtime-storage/data/foundryvtt:/data
    ports:
      - 30000:30000
    restart: unless-stopped
    env_file: foundryvtt.env
    labels:
      - docker-volume-backup.stop-during-backup=true
  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    restart: unless-stopped
  nc_postgres:
    container_name: nc_postgres
    image: postgres:15
    restart: unless-stopped
    env_file: nextcloud_postgres.env
    ports:
      - 5432:5432
    volumes:
      - /home/luckierdodge/killingtime-storage/data/nc_postgres:/var/lib/postgresql/data
    labels:
      - docker-volume-backup.stop-during-backup=true
  paperless_broker:
    container_name: paperless_broker
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - /home/luckierdodge/killingtime-storage/data/paperless/paperless_brokerdata:/data
    labels:
      - docker-volume-backup.stop-during-backup=true
  paperless_db:
    container_name: paperless_db
    image: docker.io/library/postgres:15
    restart: unless-stopped
    volumes:
      - /home/luckierdodge/killingtime-storage/data/paperless/paperless_pgdata:/var/lib/postgresql/data
    env_file: paperless_db.env
    labels:
      - docker-volume-backup.stop-during-backup=true
  paperless_webserver:
    container_name: paperless_webserver
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - paperless_db
      - paperless_broker
      - gotenberg
      - tika
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - /home/luckierdodge/killingtime-storage/data/paperless/paperless_data:/usr/src/paperless/data
      - /home/luckierdodge/killingtime-storage/data/paperless/paperless_media:/usr/src/paperless/media
      - /home/luckierdodge/killingtime-storage/data/paperless/paperless_export:/usr/src/paperless/export
      - /home/luckierdodge/killingtime-storage/data/paperless/paperless_consume:/usr/src/paperless/consume
    env_file: paperless_webserver.env
    environment:
      PAPERLESS_REDIS: redis://paperless_broker:6379
      PAPERLESS_DBHOST: paperless_db
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
    labels:
      - docker-volume-backup.stop-during-backup=true
  gotenberg:
    container_name: gotenberg
    image: docker.io/gotenberg/gotenberg:7.8
    restart: unless-stopped
    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
  tika:
    container_name: tika
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 8880:80
    environment:
      - TZ=America/Chicago
    env_file: pihole.env
    volumes:
      - /home/luckierdodge/killingtime-storage/config/etc-pihole/:/etc/pihole
      - /home/luckierdodge/killingtime-storage/config/etc-dnsmasq.d/etc/dnsmasq.d
    dns:
        - 127.0.0.1
        - 1.1.1.1
    labels:
      - docker-volume-backup.stop-during-backup=true
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
      - JELLYFIN_PublishedServerUrl=jellyfin.ryandlewis.dev #optional
    volumes:
      - /home/luckierdodge/killingtime-storage/config/jellyfin:/config
      - /home/luckierdodge/havoc-data/media/tv:/data/tvshows
      - /home/luckierdodge/havoc-data/media/movies:/data/movies
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    restart: unless-stopped
    labels:
      - docker-volume-backup.stop-during-backup=true
  backup:
    # In production, it is advised to lock your image tag to a proper
    # release version instead of using `latest`.
    # Check https://github.com/offen/docker-volume-backup/releases
    # for a list of available releases.
    image: offen/docker-volume-backup:v2.43.1
    container_name: backup
    restart: unless-stopped
    env_file: ./backup.env # see below for configuration reference
    volumes:
      - /home/luckierdodge/killingtime-storage/config:/backup/config:ro
      - /home/luckierdodge/killingtime-storage/data:/backup/data:ro
      # Mounting the Docker socket allows the script to stop and restart
      # the container during backup and to access the container labels to
      # specify custom commands. You can omit this if you don't want to
      # stop the container or run custom commands. In case you need to
      # proxy the socket, you can also provide a location by setting
      # `DOCKER_HOST` in the container
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # If you mount a local directory or volume to `/archive` a local
      # copy of the backup will be stored there. You can override the
      # location inside of the container by setting `BACKUP_ARCHIVE`.
      # You can omit this if you do not want to keep local backups.
      - /home/luckierdodge/killingtime-backup/volumes:/archive
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /home/luckierdodge/killingtime-storage/config/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    ports:
      - 8123:8123
    labels:
      - docker-volume-backup.stop-during-backup=true
  mqtt:
    image: eclipse-mosquitto
    container_name: mqtt
    volumes:
      - /home/luckierdodge/killingtime-storage/config/mqtt/config:/mosquitto/config
      - /home/luckierdodge/killingtime-storage/data/mqtt/data:/mosquitto/data
      - /home/luckierdodge/killingtime-storage/data/mqtt/log:/mosquitto/log
    ports:
      - 1883:1883
      - 9001:9001
    stdin_open: true
    tty: true
    labels:
      - docker-volume-backup.stop-during-backup=true
  openwakeword:
    image: rhasspy/wyoming-openwakeword:latest
    container_name: openwakeword
    restart: unless-stopped
    ports:
      - 10400:10400
    volumes:
      - /home/luckierdodge/killingtime-storage/config/openwakeword:/config
      - /home/luckierdodge/killingtime-storage/data/openwakeword:/custom
    command: --preload-model 'hey_mycroft' --custom-model-dir /custom --uri 'tcp://0.0.0.0:10400' --threshold 0.7 --trigger-level 2 --debug
    labels:
      - docker-volume-backup.stop-during-backup=true
  piper:
    image: lscr.io/linuxserver/piper:latest
    container_name: piper
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - PIPER_VOICE=en_US-lessac-medium
      - PIPER_LENGTH=1.0 #optional
      - PIPER_NOISE=0.667 #optional
      - PIPER_NOISEW=0.333 #optional
      - PIPER_SPEAKER=0 #optional
      - PIPER_PROCS=1 #optional
    volumes:
      - /home/luckierdodge/killingtime-storage/config/piper:/config
    ports:
      - 10200:10200
    restart: unless-stopped
    labels:
      - docker-volume-backup.stop-during-backup=true
  esphome:
    container_name: esphome
    image: ghcr.io/esphome/esphome
    volumes:
      - /home/luckierdodge/killingtime-storage/config/esphome:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: host
    environment:
      - USERNAME=luckierdodge
      - PASSWORD=${ESP_HOME_PASSWORD:-changeme}
    labels:
      - docker-volume-backup.stop-during-backup=true
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    restart: unless-stopped
    env_file: ./gluetun.env
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      #- 9117:9117 # Jackett
      - 7070:7070 # QBittorrent
      - 9696:9696 # Prowlarr
      - 6881:6881 # QBittorrent Incoming Port
      - 8989:8989 # Sonarr
      - 7878:7878 # Radarr
      - 8686:8686 # Lidarr
      - 6789:6789 # Nzbget
      - 3579:3579 # Ombi
    environment:
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=wireguard
      - SERVER_COUNTRIES=United States
      - PORT_FORWARD_ONLY=on
  #jackett:
  #  image: linuxserver/jackett
  #  container_name: jackett
  #  depends_on: ["gluetun"]
  #  network_mode: service:gluetun
  #  sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
  #  restart: no
  #  environment:
  #    - PUID=1000
  #    - PGID=100
  #    - TZ=America/Chicago
  #    - AUTO_UPDATE=true
  #  volumes:
  #    - /etc/localtime:/etc/localtime:ro
  #    - /home/luckierdodge/killingtime-storage/config/jackett/config:/config:z
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    depends_on: ["gluetun"]
    network_mode: service:gluetun
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
    volumes:
      - /home/luckierdodge/killingtime-storage/config/prowlarr/config:/config
    labels:
      - docker-volume-backup.stop-during-backup=true
  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    depends_on: ["gluetun"]
    network_mode: service:gluetun
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=100
      - TZ=America/Chicago
      - WEBUI_PORT=7070
      - TORRENTING_PORT=6881
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /home/luckierdodge/killingtime-storage/config/qbittorrent/config:/config:z
      - /home/luckierdodge/havoc-data/media/downloads:/media/downloads:z
      - /home/luckierdodge/havoc-data/media/movies:/media/movies:z
      - /home/luckierdodge/havoc-data/media/tv:/media/tv:z
    labels:
      - docker-volume-backup.stop-during-backup=true
  uptimekuma:
    image: louislam/uptime-kuma
    container_name: uptimekuma
    restart: unless-stopped
    ports:
      - 3001:3001
    volumes:
      - /home/luckierdodge/killingtime-storage/data/uptimekuma:/app/data
    labels:
      - docker-volume-backup.stop-during-backup=true

